# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'companyGUI.ui'
#
# Created by: PyQt5 Client code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import threading

import cv2
from PyQt5 import QtCore, QtGui, QtWidgets
import sys, os
sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
from Database import DBconnection as DB
import detect_video_hyo

class Ui_Dialog(object):
    def __init__(self):
        super().__init__()
        self.sum = 0
        self.company_name = 'Sejong Cafe'
        self.timer = QtCore.QTimer()
        self.time = QtCore.QTime(0, 0, 0)



    def setupText(self):
        self.menuText = ["아메리카노\n""4000", "카페라떼\n""5000", "바나나라떼\n""5000", "헤이즐넛\n""4500", "카라멜라떼\n""5500", "민트초코\n""5500", "녹차\n""4000", "케이크\n""6000", "쿠키\n""3500"]


    def setupTitle(self):
        self.palceLabel = QtWidgets.QLabel(self.Dialog)
        self.palceLabel.setGeometry(QtCore.QRect(170, 30, 801, 71))
        font = QtGui.QFont()
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.palceLabel.setFont(font)
        self.palceLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.palceLabel.setObjectName("palceLabel")

    def setupMenu(self):
        self.layoutWidget = QtWidgets.QWidget(self.Dialog)
        self.layoutWidget.setGeometry(QtCore.QRect(60, 150, 631, 241))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")

        self.menuBtn = list()
        r = 0
        c = 0
        for i in range(0, 9):
            menuButton = QtWidgets.QPushButton(self.layoutWidget)
            self.menuBtn.append(menuButton)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.menuBtn[i].sizePolicy().hasHeightForWidth())
            self.menuBtn[i].setSizePolicy(sizePolicy)
            self.menuBtn[i].setObjectName("menuButton")
            self.menuBtn[i].setText(self.menuText[i])
            self.gridLayout.addWidget(self.menuBtn[i], r, c, 1, 1)
            c = c+1
            if c == 3:
                c = 0
                r = r + 1
            self.menuBtn[i].clicked.connect(lambda state, button=self.menuBtn[i]: self.menuBtnClicked(state, button))

    def menuBtnClicked(self, state, button):

        rowCnt = self.payListTable.rowCount()

        print(rowCnt)

        t = button.text().split("\n")
        print(t)
        self.sum = self.sum + int(t[1])
        self.sumLabel.setText("합계: "+str(self.sum))
        for i in range (0, rowCnt):
            if self.payListTable.item(i, 0).text() == t[0]:
                print("equal")
                num = int(self.payListTable.item(i, 1).text()) + 1
                price = int(self.payListTable.item(i, 2).text()) + int(t[1])
                self.payListTable.item(i, 1).setText(str(num))
                self.payListTable.item(i, 2).setText(str(price))
                return

        self.payListTable.insertRow(rowCnt)
        self.payListTable.setItem(rowCnt, 0, QtWidgets.QTableWidgetItem(t[0]))
        self.payListTable.setItem(rowCnt, 1, QtWidgets.QTableWidgetItem(str(1)))
        self.payListTable.setItem(rowCnt, 2, QtWidgets.QTableWidgetItem(t[1]))

    def loadPayHistory(self):
        self.payHistoryTable.setRowCount(0)
        history_list = DB.load_company_payment_history(self.company_name)

        for history in history_list:
            rowCnt = self.payHistoryTable.rowCount()
            self.payHistoryTable.insertRow(rowCnt)
            self.payHistoryTable.setItem(rowCnt, 0, QtWidgets.QTableWidgetItem(str(history[0])))
            self.payHistoryTable.setItem(rowCnt, 1, QtWidgets.QTableWidgetItem(str(history[1])))
            self.payHistoryTable.setItem(rowCnt, 2, QtWidgets.QTableWidgetItem(history[2]))
            self.payHistoryTable.setItem(rowCnt, 3, QtWidgets.QTableWidgetItem(history[3]))



    def setupPayHistory(self):
        self.payHistoryTable = QtWidgets.QTableWidget(self.Dialog)
        self.payHistoryTable.setGeometry(QtCore.QRect(500, 430, 561, 361))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.payHistoryTable.sizePolicy().hasHeightForWidth())
        self.payHistoryTable.setSizePolicy(sizePolicy)
        self.payHistoryTable.setMinimumSize(QtCore.QSize(500, 0))
        self.payHistoryTable.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.payHistoryTable.setRowCount(0)
        self.payHistoryTable.setColumnCount(4)
        self.payHistoryTable.setObjectName("payHistoryTable")
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setKerning(False)
        item.setFont(font)
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.payHistoryTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.payHistoryTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.payHistoryTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.payHistoryTable.setHorizontalHeaderItem(3, item)

        self.payHistoryTable.verticalHeader().setFixedWidth(self.payHistoryTable.width() * 0.5 / 10)
        self.payHistoryTable.setColumnWidth(0, self.payHistoryTable.width()*3 / 10)
        self.payHistoryTable.setColumnWidth(1, self.payHistoryTable.width()*2 / 10)
        self.payHistoryTable.setColumnWidth(2, self.payHistoryTable.width()*2 / 10)
        self.payHistoryTable.setColumnWidth(3, self.payHistoryTable.width()*2.5 / 10)

        self.payHistoryTable.horizontalScrollBar().setDisabled(True)
        self.payHistoryTable.horizontalScrollBar().setVisible(False)
        self.payHistoryTable.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.payHistoryTable.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.NoSelection)
        self.timer.timeout.connect(self.loadPayHistory)
        self.timer.start(1000)


    def setupCar(self):
        self.layoutWidget_3 = QtWidgets.QWidget(self.Dialog)
        self.layoutWidget_3.setGeometry(QtCore.QRect(730, 150, 321, 240))
        self.layoutWidget_3.setObjectName("layoutWidget_3")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.layoutWidget_3)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.carNum = QtWidgets.QLineEdit(self.layoutWidget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.carNum.sizePolicy().hasHeightForWidth())
        self.carNum.setSizePolicy(sizePolicy)
        self.carNum.setObjectName("carNum")
        self.gridLayout_6.addWidget(self.carNum, 0, 0, 1, 1)
        self.gridLayout_5.addLayout(self.gridLayout_6, 1, 0, 1, 1)
        self.carImage = QtWidgets.QLabel(self.layoutWidget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.carImage.sizePolicy().hasHeightForWidth())
        self.carImage.setSizePolicy(sizePolicy)
        self.carImage.setMinimumSize(QtCore.QSize(0, 210))
        self.carImage.setWordWrap(False)
        self.carImage.setObjectName("carImage")
        self.gridLayout_5.addWidget(self.carImage, 0, 0, 1, 1)

        # camThread = threading.Thread(target=self.detectCarPlate)
        # camThread.start()

    def detectCarPlate(self):
        detect_video_hyo.detectPlate(self, 'test_car4.mp4')

    def setCarVideoImage(self, frame, carPlateNum):
        height, width = frame.shape[:2]
        color_swap_image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        qImg = QtGui.QImage(frame.data, width, height, frame.strides[0],
                            QtGui.QImage.Format_RGB888)
        pixmapImg = QtGui.QPixmap.fromImage(qImg)
        resizedPixmapImg = pixmapImg.scaledToWidth(350)
        self.carImage.setPixmap(resizedPixmapImg)

        self.carNum.setText(carPlateNum)


    def setupPayList(self):
        self.payListTable = QtWidgets.QTableWidget(self.Dialog)
        self.payListTable.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.payListTable.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.payListTable.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)
        self.payListTable.setGeometry(QtCore.QRect(60, 430, 411, 311))
        self.payListTable.setObjectName("payListTable")
        self.payListTable.setColumnCount(3)
        self.payListTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.payListTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.payListTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.payListTable.setHorizontalHeaderItem(2, item)

        self.payListTable.verticalHeader().setFixedWidth(self.payListTable.width() * 0.5 / 10)
        self.payListTable.setColumnWidth(0, self.payListTable.width() * 4.5 / 10)
        self.payListTable.setColumnWidth(1, self.payListTable.width() * 2 / 10)
        self.payListTable.setColumnWidth(2, self.payListTable.width() * 3 / 10)
        self.payListTable.horizontalScrollBar().setDisabled(True)
        self.payListTable.horizontalScrollBar().setVisible(False)

    def setupPay(self):
        self.widget = QtWidgets.QWidget(self.Dialog)
        self.widget.setGeometry(QtCore.QRect(100, 750, 364, 26))
        self.widget.setObjectName("widget")

        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")

        self.sumLabel = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sumLabel.sizePolicy().hasHeightForWidth())
        self.sumLabel.setSizePolicy(sizePolicy)
        self.sumLabel.setMinimumSize(QtCore.QSize(200, 0))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.sumLabel.setFont(font)
        self.sumLabel.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.sumLabel.setObjectName("sumLabel")
        self.gridLayout_2.addWidget(self.sumLabel, 0, 0, 1, 1)

        self.payButton = QtWidgets.QPushButton(self.widget)
        self.payButton.setObjectName("payButton")
        self.gridLayout_2.addWidget(self.payButton, 0, 1, 1, 1)
        self.payButton.clicked.connect(self.payBtnClicked)

        self.cancleButton = QtWidgets.QPushButton(self.widget)
        self.cancleButton.setObjectName("cancleButton")
        self.gridLayout_2.addWidget(self.cancleButton, 0, 2, 1, 1)
        self.cancleButton.clicked.connect(self.cancelBtnClicked)

    def payBtnClicked(self):
        print("pay")
        result = DB.self_pay(self.sum, self.carNum.text(), self.company_name)
        print("success")
        if result == False:
            print("실패")
            QtWidgets.QMessageBox.about(self.Dialog, "결제실패", "해당유저에 등록된 카드가 없습니다.")
        else:
            self.payListTable.setRowCount(0)
            self.payListTable.clearContents()
            self.sum = 0
            self.sumLabel.setText("합계: " + str(self.sum))
            self.carNum.setText('')

    def cancelBtnClicked(self):
        remove_row = self.payListTable.selectedIndexes()[0].row()
        self.sum = self.sum - int(self.payListTable.item(remove_row, 2).text())
        self.sumLabel.setText("합계: " + str(self.sum))
        self.payListTable.removeRow(remove_row)

    def setupUi(self, Dialog):
        self.Dialog = Dialog
        self.Dialog.setObjectName("Dialog")
        self.Dialog.resize(1135, 837)
        self.setupText()
        self.setupTitle()
        self.setupPayHistory()
        self.setupCar()
        self.setupPayList()
        self.setupMenu()
        self.setupPay()


        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self.Dialog)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.Dialog.setWindowTitle(_translate("SPP SYSTEM", "SPP SYSTEM"))
        # for i in range(0, 9):
        #     self.menuBtn[i].setText(_translate("self.Dialog", self.menuText[i]))
        # self.menuBtn[0].setText(_translate("self.Dialog", "아메리카노\n""4000"))
        # self.menuBtn[1].setText(_translate("self.Dialog", "카페라떼\n""5000"))
        # self.menuBtn[2].setText(_translate("self.Dialog", "바나나라떼\n""5000"))
        # self.menuBtn[3].setText(_translate("self.Dialog", "헤이즐넛\n""4500"))
        # self.menuBtn[4].setText(_translate("self.Dialog", "카라멜라떼\n""5500"))
        # self.menuBtn[5].setText(_translate("self.Dialog", "민트초코\n""5500"))
        # self.menuBtn[6].setText(_translate("self.Dialog", "녹차\n""4000"))
        # self.menuBtn[7].setText(_translate("self.Dialog", "케이크\n""6000"))
        # self.menuBtn[8].setText(_translate("self.Dialog", "쿠키\n""3500"))
        item = self.payHistoryTable.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "결제시간"))
        item = self.payHistoryTable.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "결제금액"))
        item = self.payHistoryTable.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "자동차번호"))
        item = self.payHistoryTable.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "장소"))
        self.payButton.setText(_translate("Dialog", "결제"))
        self.carImage.setText(_translate("Dialog", "사진"))
        item = self.payListTable.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "상품명"))
        item = self.payListTable.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "단가"))
        item = self.payListTable.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "금액"))
        self.cancleButton.setText(_translate("Dialog", "취소"))
        self.sumLabel.setText(_translate("Dialog", "합계:  0"))
        self.palceLabel.setText(_translate("Dialog", "Sejong Cafe"))

        pixmap = QtGui.QPixmap('logo.png')
        resizedPixmapImg = pixmap.scaledToWidth(350)
        self.carImage.setPixmap(resizedPixmapImg)


    def test(self):
        print("연결")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
